name: test
on:
  push:
  workflow_dispatch:

jobs:
  prepare-config:
    name: Prepare Verdaccio Config
    runs-on: ubuntu-latest
    outputs:
      config-path: ${{ steps.copy-config.outputs.config-path }}
    steps:
      - uses: actions/checkout@v4
      - name: Copy Verdaccio config to workspace
        id: copy-config
        run: |
          echo "config-path=$GITHUB_WORKSPACE/conf" >> $GITHUB_OUTPUT


  main:
    name: Build & Test
    needs: prepare-config
    runs-on: ubuntu-latest
    container:
      image: node:24
    services:
      verdaccio:
        image: verdaccio/verdaccio:latest
        ports:
          - 4873:4873
        volumes:
          # - /home/runner/work/nestjs-pact-test/nestjs-pact-test/conf:/verdaccio/conf
          - ${{ github.workspace }}/conf:/verdaccio/conf
          # - ${{ needs.prepare-config.outputs.config-path }}:/verdaccio/conf
        options: --name verdaccio
    strategy:
      matrix:
        node-version: [24.x]
        # spec: [v2]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Restart_Verdaccio
        # Restart Verdaccio after volumes have been checked out
        uses: docker://docker
        with:
          args: docker restart verdaccio
      - name: Wait for Verdaccio
        run: |
          for i in {1..30}; do
            if curl -s http://verdaccio:4873/; then
              echo "Verdaccio is up!"
              break
            fi
            echo "Waiting for Verdaccio..."
            sleep 2
          done

      - name: Login to Verdaccio
        run: |
          curl -s \
              -H "Accept: application/json" \
              -H "Content-Type:application/json" \
              -X PUT --data '{"name": "test", "password": "test"}' \
              http://verdaccio:4873/-/user/org.couchdb.user:test
          TOKEN=$(curl -s \
            -H "Accept: application/json" \
            -H "Content-Type:application/json" \
            -X PUT --data '{"name": "test", "password": "test"}' \
            http://verdaccio:4873/-/user/org.couchdb.user:test 2>&1 | grep -Po \
            '(?<="token": ")[^"]*')
          echo "TOKEN=$TOKEN"

      - run: |
          npm config set "//verdaccio:4873/:_authToken=${{ env.TOKEN }}"
          npm whoami --registry http://verdaccio:4873 || echo "Not logged in"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'http://verdaccio:4873'

      - run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

      - name: Clone and Build Pact.js
        run: |
          npm config set "//verdaccio:4873/:_authToken=${{ env.TOKEN }}"
          npm whoami --registry http://verdaccio:4873 || echo "Not logged in"
          cd /tmp
          git clone https://github.com/pact-foundation/pact-js
          cd pact-js
          git checkout feat/v4-asynchronous-messages-pact-core-v17
          npm install
          npm run release
          npm run dist
          npm publish ./dist --access public --tag latest

      - name: Clone and Build Nest.js Pact
        run: |
          cd /tmp
          git clone https://github.com/pact-foundation/nestjs-pact
          cd nestjs-pact
          git checkout feat/v3_v4_interface
          yarn add @pact-foundation/pact@^16.0.0 --save-dev
          yarn install
          yarn build
          npm publish

      # - run: make ${{ matrix.spec }}_consumer_install
      # - run: make ${{ matrix.spec }}_consumer_test
      # - run: make ${{ matrix.spec }}_provider_install
      # - run: make ${{ matrix.spec }}_provider_test_local
      - run: make v2_consumer_install
      - run: make v2_consumer_test
      - run: make v2_provider_install
      - run: make v2_provider_test_local
      - run: make v3_consumer_install
      - run: make v3_consumer_test
      - run: make v3_provider_install
      - run: make v3_provider_test_local
      - run: make v4_consumer_install
      - run: make v4_consumer_test
      - run: make v4_provider_install
      - run: make v4_provider_test_local
